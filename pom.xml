<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.diveintojee.poc</groupId>
    <artifactId>elasticsearch-continuity</artifactId>
    <packaging>war</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>elasticsearch-continuity webapp</name>
    <url>http://github.com/lgueye/elasticsearch-continuity</url>

    <prerequisites>
        <maven>2.2.1</maven>
    </prerequisites>

    <!--<repositories>-->
    <!--<repository>-->
    <!--<id>sonatype-releases</id>-->
    <!--<name>Sonatype Releases Repository</name>-->
    <!--<url>http://oss.sonatype.org/content/repositories/releases/</url>-->
    <!--</repository>-->
    <!--</repositories>-->

    <developers>
        <developer>
            <email>louis.gueye@gmail.com</email>
            <id>lgueye</id>
            <name>louis gueye</name>
            <organization>org.diveintojee.poc</organization>
            <organizationUrl>http://deepintojee.wordpress.com</organizationUrl>
            <timezone>+1</timezone>
            <url>http://github.com/lgueye/elasticsearch-continuity</url>
        </developer>
    </developers>

    <properties>

        <!-- LOGGING -->
        <commons-logging.version>1.1.1</commons-logging.version>
        <slf4j.version>1.7.2</slf4j.version>
        <log4j.version>1.2.17</log4j.version>

        <!-- COMMONS -->
        <commons-lang.version>3.1</commons-lang.version>
        <commons-collections.version>3.2.1</commons-collections.version>
        <commons-codec.version>1.7</commons-codec.version>
        <commons-io.version>2.4</commons-io.version>
        <guava.version>13.0.1</guava.version>

        <!-- PERSISTENCE -->
        <hibernate-entitymanager.version>4.1.7.Final</hibernate-entitymanager.version>
        <mysql-connector-java.version>5.1.21</mysql-connector-java.version>
        <cglib.version>2.2.2</cglib.version>
        <joda-time.version>2.1</joda-time.version>
        <joda-time-hibernate.version>1.3</joda-time-hibernate.version>
        <usertype.core.version>3.0.0.GA</usertype.core.version>
        <geocoder-java.version>0.9</geocoder-java.version>

        <!-- SEARCH -->
        <elasticsearch.version>0.19.9</elasticsearch.version>
        <spring-elasticsearch.version>0.0.2</spring-elasticsearch.version>

        <!-- SERVICE -->
        <spring.version>3.1.2.RELEASE</spring.version>
        <validation-api.version>1.0.0.GA</validation-api.version>
        <hibernate-validator.version>4.3.0.Final</hibernate-validator.version>

        <!-- SECURITY -->
        <spring.security.version>3.1.2.RELEASE</spring.security.version>
        <jsr250-api.version>1.0</jsr250-api.version>

        <!-- WEB, REST, MVC -->
        <jersey.version>1.14</jersey.version>
        <jackson-mapper-asl.version>1.9.10</jackson-mapper-asl.version>
        <httpclient.version>4.2.2</httpclient.version>
        <servlet-api.version>3.0-alpha-1</servlet-api.version>
        <xstream.version>1.4.3</xstream.version>
        <thymeleaf.version>2.0.14</thymeleaf.version>

        <!-- TEST -->
        <junit.version>4.10</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <h2.version>1.3.168</h2.version>
        <dbunit.version>2.4.9</dbunit.version>
        <maven-jetty-plugin.version>6.1.26</maven-jetty-plugin.version>
        <groovy.version>1.8.3</groovy.version>
        <jbehave.version>3.7.3</jbehave.version>
        <jbehave-site-resources.version>3.1.1</jbehave-site-resources.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <symmetric-csv.version>3.1.7</symmetric-csv.version>

        <!-- BUILD -->
        <webapp.module.context>elasticsearch-continuity</webapp.module.context>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.6</java.version>
        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <maven-install-plugin.version>2.4</maven-install-plugin.version>
        <maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
        <maven-war-plugin.version>2.2</maven-war-plugin.version>
        <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
        <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
        <maven-site-plugin.version>3.1</maven-site-plugin.version>
        <maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.12.4</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.12.4</maven-surefire-plugin.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-source-plugin.version>2.2</maven-source-plugin.version>
        <hibernate3-maven-plugin.version>3.0</hibernate3-maven-plugin.version>
        <cobertura-maven-plugin.version>2.5.1</cobertura-maven-plugin.version>
        <dbunit-maven-plugin.version>1.0-beta-3</dbunit-maven-plugin.version>
        <exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>

    </properties>

    <dependencies>

        <!-- LOGGING -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- COMMONS -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons-collections.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- PERSISTENCE -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-entitymanager.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.byteman</groupId>
                    <artifactId>byteman</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.byteman</groupId>
                    <artifactId>byteman-bmunit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.byteman</groupId>
                    <artifactId>byteman-install</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap</groupId>
                    <artifactId>shrinkwrap-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap</groupId>
                    <artifactId>shrinkwrap-impl-base</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>${usertype.core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.dbunit</groupId>
                    <artifactId>dbunit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-entitymanager</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.joda</groupId>
                    <artifactId>joda-money</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>${joda-time-hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.geocoder-java</groupId>
            <artifactId>geocoder-java</artifactId>
            <version>${geocoder-java.version}</version>
        </dependency>

        <!-- SEARCH -->
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>

        <!-- BUSINESS -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>

        <!-- WEB, REST, MVC -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.persistence</groupId>
                    <artifactId>persistence-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.ejb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-osgi-bundle</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.osgi</groupId>
                    <artifactId>osgi_R4_core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-jaxrs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.codehaus.jackson</groupId>
                    <artifactId>jackson-xc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-apache-client4</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson-mapper-asl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson-mapper-asl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
            <version>${jackson-mapper-asl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${xstream.version}</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring3</artifactId>
            <version>${thymeleaf.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webmvc</artifactId>
                </exclusion>
            </exclusions>

        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons-logging.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-spring</artifactId>
            <version>${jbehave.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-test</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-core</artifactId>
            <version>${jbehave.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-core</artifactId>
            <version>${jbehave.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jbehave.site</groupId>
            <artifactId>jbehave-site-resources</artifactId>
            <version>${jbehave-site-resources.version}</version>
            <type>zip</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jumpmind.symmetric</groupId>
            <artifactId>symmetric-csv</artifactId>
            <version>${symmetric-csv.version}</version>
        </dependency>

        <!-- SECURITY -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>${jsr250-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven-eclipse-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <configuration>
                        <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/Abstract*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/Abstract*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>${maven-jetty-plugin.version}</version>
                    <dependencies>
                        <!-- If not added, jetty complains about spring namespace schemas location
                    that are not found -->
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-context</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-webmvc</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-tx</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>commons-dbcp</groupId>
                            <artifactId>commons-dbcp</artifactId>
                            <version>${commons-dbcp.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <contextPath>${webapp.module.context}</contextPath>
                        <connectors>
                            <connector
                                    implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                <port>${container.port}</port>
                                <maxIdleTime>60000</maxIdleTime>
                            </connector>
                        </connectors>
                        <scanIntervalSeconds>10</scanIntervalSeconds>
                        <stopKey>foo</stopKey>
                        <stopPort>9180</stopPort>
                        <tmpDirectory>${java.io.tmpdir}</tmpDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>start-jetty</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>deploy-war</goal>
                            </goals>
                            <configuration>
                                <daemon>true</daemon>
                            </configuration>
                        </execution>
                        <execution>
                            <id>stop-jetty</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jbehave</groupId>
                    <artifactId>jbehave-maven-plugin</artifactId>
                    <version>${jbehave.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>log4j</groupId>
                            <artifactId>log4j</artifactId>
                            <version>${log4j.version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>com.sun.jdmk</groupId>
                                    <artifactId>jmxtools</artifactId>
                                </exclusion>
                                <exclusion>
                                    <groupId>com.sun.jmx</groupId>
                                    <artifactId>jmxri</artifactId>
                                </exclusion>
                                <exclusion>
                                    <groupId>javax.jms</groupId>
                                    <artifactId>jms</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-context</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-test</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jbehave</groupId>
                            <artifactId>jbehave-spring</artifactId>
                            <version>${jbehave.version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>org.springframework</groupId>
                                    <artifactId>spring-context</artifactId>
                                </exclusion>
                                <exclusion>
                                    <groupId>org.springframework</groupId>
                                    <artifactId>spring-test</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>com.sun.jersey.contribs</groupId>
                            <artifactId>jersey-apache-client4</artifactId>
                            <version>${jersey.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.httpcomponents</groupId>
                            <artifactId>httpclient</artifactId>
                            <version>${httpclient.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>commons-codec</groupId>
                            <artifactId>commons-codec</artifactId>
                            <version>${commons-codec.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.sun.jersey</groupId>
                            <artifactId>jersey-json</artifactId>
                            <version>${jersey.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>joda-time</groupId>
                            <artifactId>joda-time</artifactId>
                            <version>${joda-time.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>run-stories-as-embeddables</id>
                            <phase>integration-test</phase>
                            <configuration>
                                <scope>test</scope>
                                <includes>
                                    <include>${jbehave.embeddables}</include>
                                </includes>
                                <excludes/>
                                <skip>${jbehave.skip}</skip>
                                <batch>false</batch>
                                <threads>${jbehave.threads}</threads>
                                <storyTimeoutInSecs>${jbehave.storyTimeoutInSecs}
                                </storyTimeoutInSecs>
                                <generateViewAfterStories>true</generateViewAfterStories>
                                <ignoreFailureInStories>${jbehave.ignoreFailureInStories}
                                </ignoreFailureInStories>
                                <ignoreFailureInView>false</ignoreFailureInView>
                                <metaFilters>
                                    <metaFilter>${jbehave.meta.filters}</metaFilter>
                                </metaFilters>
                            </configuration>
                            <goals>
                                <goal>run-stories-as-embeddables</goal>
                                <goal>unpack-view-resources</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>dbunit-maven-plugin</artifactId>
                    <version>${dbunit-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.dbunit</groupId>
                            <artifactId>dbunit</artifactId>
                            <version>${dbunit.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>acceptance-wip</id>
            <properties>
                <!-- log properties -->
                <log.file.path>${project.build.directory}/elasticsearch-continuity</log.file.path>
                <org.diveintojee.poc.log.level>debug</org.diveintojee.poc.log.level>

                <!-- persistence properties -->
                <javax.persistence.jdbc.driver>org.h2.Driver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:h2:tcp://localhost:9092/elasticsearch-continuity</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>sa</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password/>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
                <hibernate.show_sql>true</hibernate.show_sql>

                <!-- container properties -->
                <container.host>localhost</container.host>
                <container.port>9080</container.port>

                <!-- tests properties -->
                <jbehave.embeddables>**/*Story.java</jbehave.embeddables>
                <jbehave.skip>false</jbehave.skip>
                <jbehave.threads>1</jbehave.threads>
                <jbehave.storyTimeoutInSecs>3</jbehave.storyTimeoutInSecs>
                <jbehave.ignoreFailureInStories>false</jbehave.ignoreFailureInStories>
                <jbehave.meta.filters>+progress wip</jbehave.meta.filters>
            </properties>
            <build>
                <resources>
                    <!-- Copy .properties files to output and filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                        </includes>
                    </resource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                            <exclude>**/log4j.xml</exclude>
                        </excludes>
                    </resource>
                </resources>
                <testResources>
                    <!-- Copy .properties files to output and filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                        </includes>
                    </testResource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>false</filtering>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                            <exclude>**/log4j.xml</exclude>
                        </excludes>
                    </testResource>
                </testResources>

                <plugins>
                    <!-- Starts an H2 tcp server -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <!-- start server before integration tests -->
                                <id>start-database</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcp</argument>
                                        <argument>-tcpDaemon</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- stop server after integration tests -->
                                <id>stop-database</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcpShutdown</argument>
                                        <argument>tcp://localhost:9092</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Runs tests that end with TestIT (database) tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </plugin>
                    <!-- Starts an embedded container and deploys the war to that container -->
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <version>${maven-jetty-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>${dbunit-maven-plugin.version}</version>
                        <configuration>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <url>${javax.persistence.jdbc.url}</url>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clean-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>operation</goal>
                                </goals>
                                <configuration>
                                    <format>flat</format>
                                    <type>DELETE_ALL</type>
                                    <src>src/test/resources/dbunit/persistence-test-data.xml</src>
                                </configuration>
                            </execution>
                            <execution>
                                <id>insert-acceptance-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>operation</goal>
                                </goals>
                                <configuration>
                                    <format>flat</format>
                                    <type>CLEAN_INSERT</type>
                                    <src>src/test/resources/dbunit/acceptance-test-data.xml</src>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Runs the acceptance tests against the running container -->
                    <plugin>
                        <groupId>org.jbehave</groupId>
                        <artifactId>jbehave-maven-plugin</artifactId>
                        <version>${jbehave.version}</version>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <profile>
            <id>acceptance-done</id>
            <properties>
                <!-- log properties -->
                <log.file.path>${project.build.directory}/elasticsearch-continuity</log.file.path>
                <org.diveintojee.poc.log.level>debug</org.diveintojee.poc.log.level>

                <!-- persistence properties -->
                <javax.persistence.jdbc.driver>org.h2.Driver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:h2:tcp://localhost:9092/elasticsearch-continuity</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>sa</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password/>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
                <hibernate.show_sql>false</hibernate.show_sql>

                <!-- container properties -->
                <container.host>localhost</container.host>
                <container.port>9080</container.port>

                <!-- tests properties -->
                <jbehave.embeddables>**/*Story.java</jbehave.embeddables>
                <jbehave.skip>false</jbehave.skip>
                <jbehave.threads>2</jbehave.threads>
                <jbehave.storyTimeoutInSecs>3</jbehave.storyTimeoutInSecs>
                <jbehave.ignoreFailureInStories>false</jbehave.ignoreFailureInStories>
                <jbehave.meta.filters>+progress done</jbehave.meta.filters>
            </properties>
            <build>
                <resources>
                    <!-- Copy .properties files to output and filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                            <include>**/*.json</include>
                            <include>**/*.yml</include>
                        </includes>
                    </resource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <testResources>
                    <!-- Copy .properties files to output and filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                            <include>**/*.json</include>
                            <include>**/*.yml</include>
                            <include>**/*.story</include>
                        </includes>
                    </testResource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>false</filtering>
                    </testResource>
                </testResources>

                <plugins>
                    <!-- Starts an H2 tcp server -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <!-- start server before integration tests -->
                                <id>start-database</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcp</argument>
                                        <argument>-tcpDaemon</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- stop server after integration tests -->
                                <id>stop-database</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcpShutdown</argument>
                                        <argument>tcp://localhost:9092</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Runs tests that end with TestIT (database) tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </plugin>
                    <!-- Starts an embedded container and deploys the war to that container -->
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <version>${maven-jetty-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>${dbunit-maven-plugin.version}</version>
                        <configuration>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <url>${javax.persistence.jdbc.url}</url>
                            <username>${javax.persistence.jdbc.user}</username>
                            <password>${javax.persistence.jdbc.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clean-integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>operation</goal>
                                </goals>
                                <configuration>
                                    <format>flat</format>
                                    <type>DELETE_ALL</type>
                                    <src>src/test/resources/dbunit/persistence-test-data.xml</src>
                                </configuration>
                            </execution>
                            <execution>
                                <id>insert-acceptance-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>operation</goal>
                                </goals>
                                <configuration>
                                    <format>flat</format>
                                    <type>CLEAN_INSERT</type>
                                    <src>src/test/resources/dbunit/acceptance-test-data.xml</src>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Runs the acceptance tests against the running container -->
                    <plugin>
                        <groupId>org.jbehave</groupId>
                        <artifactId>jbehave-maven-plugin</artifactId>
                        <version>${jbehave.version}</version>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <profile>
            <id>it-tests</id>
            <properties>
                <!-- log properties -->
                <log.file.path>${project.build.directory}/elasticsearch-continuity</log.file.path>
                <org.diveintojee.poc.log.level>debug</org.diveintojee.poc.log.level>

                <!-- persistence properties -->
                <javax.persistence.jdbc.driver>org.h2.Driver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:h2:tcp://localhost:9092/elasticsearch-continuity</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>sa</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password/>
                <hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
                <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
                <hibernate.show_sql>false</hibernate.show_sql>

                <!-- container properties -->
                <container.host>localhost</container.host>
                <container.port>9080</container.port>
            </properties>

            <build>
                <resources>
                    <!-- Copy .properties files to output and filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                        </includes>
                    </resource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>false</filtering>
                    </resource>
                </resources>
                <testResources>
                    <!-- Copy .properties files to output and filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>**/*.properties</include>
                            <include>**/log4j.xml</include>
                        </includes>
                    </testResource>
                    <!-- Copy .xml files to output and do not filter them -->
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>false</filtering>
                    </testResource>
                </testResources>

                <plugins>
                    <!-- Starts an H2 tcp server -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <!-- start server before integration tests -->
                                <id>start-database</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcp</argument>
                                        <argument>-tcpDaemon</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- stop server after integration tests -->
                                <id>stop-database</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <includePluginDependencies>true</includePluginDependencies>
                                    <mainClass>org.h2.tools.Server</mainClass>
                                    <arguments>
                                        <argument>-tcpShutdown</argument>
                                        <argument>tcp://localhost:9092</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Runs tests that end with TestIT (database) tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
